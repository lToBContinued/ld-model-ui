{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    },
    "jsx": "preserve",
    "types": ["vite/client", "vue"],
    // 启用实验性的装饰器语法支持,
    "experimentalDecorators": true,
    // 允许从没有默认导出的模块中使用默认导入语法（兼容部分 CommonJS 模块）,
    "allowSyntheticDefaultImports": true,
    // 控制类字段的编译方式为ES标准,
    "useDefineForClassFields": true,
    // 指定源代码的根目录，TypeScript 会从该目录开始查找需要编译的文件,
    "rootDir": "src",
    // 指定编译输出的 JavaScript 目标版本,
    "target": "ESNext",
    // 指定生成的模块代码格式,
    "module": "ESNext",
    "lib": [
      "ESNext",
      "DOM"
      // 指定编译过程中需要包含的库文件,
    ],
    // 指定编译后输出文件的存放目录,
    "outDir": "dist",
    // 是否生成源映射文件,
    "sourceMap": false,
    // 启用严格模式,
    "strict": true,
    // 启用 CommonJS 和 ES 模块之间的互操作,
    "esModuleInterop": true,
    // 跳过对声明文件（.d.ts）的类型检查,
    "skipLibCheck": true,
    // 强制文件名大小写一致,
    "forceConsistentCasingInFileNames": true,
    // 指定模块解析策略，采用 Node.js 的模块解析算法,
    "moduleResolution": "node",
    // 允许在导入语句中使用 .ts 扩展名，需配合适当的模块解析策略使用,
    "allowImportingTsExtensions": true,
    // 允许在导入语句中使用 .json 扩展名,
    "resolveJsonModule": true
  },
  "lib": ["esnext", "dom", "dom.iterable", "webworker", "scripthost"],
  "exclude": ["node_modules", "src/**/__tests__/*"],
  "include": ["src/**/*", "src/**/*.vue", "src/**/*.d.ts"]
}
